TimeQuest Timing Analyzer report for processor
Tue Dec  9 17:19:29 2014
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'clk'
 12. Slow Model Hold: 'clk'
 13. Slow Model Minimum Pulse Width: 'clk'
 14. Setup Times
 15. Hold Times
 16. Clock to Output Times
 17. Minimum Clock to Output Times
 18. Fast Model Setup Summary
 19. Fast Model Hold Summary
 20. Fast Model Recovery Summary
 21. Fast Model Removal Summary
 22. Fast Model Minimum Pulse Width Summary
 23. Fast Model Setup: 'clk'
 24. Fast Model Hold: 'clk'
 25. Fast Model Minimum Pulse Width: 'clk'
 26. Setup Times
 27. Hold Times
 28. Clock to Output Times
 29. Minimum Clock to Output Times
 30. Multicorner Timing Analysis Summary
 31. Setup Times
 32. Hold Times
 33. Clock to Output Times
 34. Minimum Clock to Output Times
 35. Setup Transfers
 36. Hold Transfers
 37. Report TCCS
 38. Report RSKM
 39. Unconstrained Paths
 40. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                      ;
+--------------------+-------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition ;
; Revision Name      ; processor                                                         ;
; Device Family      ; Cyclone II                                                        ;
; Device Name        ; EP2C35F672C6                                                      ;
; Timing Models      ; Final                                                             ;
; Delay Model        ; Combined                                                          ;
; Rise/Fall Delays   ; Unavailable                                                       ;
+--------------------+-------------------------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 4      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                          ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------+
; Clock Name ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------+
; clk        ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk } ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------+


+--------------------------------------------------+
; Slow Model Fmax Summary                          ;
+------------+-----------------+------------+------+
; Fmax       ; Restricted Fmax ; Clock Name ; Note ;
+------------+-----------------+------------+------+
; 173.34 MHz ; 173.34 MHz      ; clk        ;      ;
+------------+-----------------+------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+--------------------------------+
; Slow Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; clk   ; -4.769 ; -277.150      ;
+-------+--------+---------------+


+-------------------------------+
; Slow Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; clk   ; 0.391 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Slow Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; clk   ; -1.380 ; -134.380              ;
+-------+--------+-----------------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk'                                                                                                                             ;
+--------+------------------------------------+---------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                          ; To Node                         ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------------------+---------------------------------+--------------+-------------+--------------+------------+------------+
; -4.769 ; controller:inst2|ioCount[0]        ; controller:inst2|txData[2]      ; clk          ; clk         ; 1.000        ; -0.007     ; 5.798      ;
; -4.735 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|txData[0]      ; clk          ; clk         ; 1.000        ; -0.016     ; 5.755      ;
; -4.722 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|txData[2]      ; clk          ; clk         ; 1.000        ; -0.016     ; 5.742      ;
; -4.672 ; controller:inst2|ioCount[4]        ; controller:inst2|txData[2]      ; clk          ; clk         ; 1.000        ; -0.007     ; 5.701      ;
; -4.667 ; controller:inst2|ioCount[1]        ; controller:inst2|txData[0]      ; clk          ; clk         ; 1.000        ; -0.007     ; 5.696      ;
; -4.647 ; controller:inst2|ioCount[1]        ; controller:inst2|txData[2]      ; clk          ; clk         ; 1.000        ; -0.007     ; 5.676      ;
; -4.644 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|txData[4]      ; clk          ; clk         ; 1.000        ; -0.012     ; 5.668      ;
; -4.626 ; controller:inst2|ioCount[4]        ; controller:inst2|txData[0]      ; clk          ; clk         ; 1.000        ; -0.007     ; 5.655      ;
; -4.555 ; controller:inst2|ioCount[5]        ; controller:inst2|txData[2]      ; clk          ; clk         ; 1.000        ; -0.007     ; 5.584      ;
; -4.535 ; controller:inst2|ioCount[4]        ; controller:inst2|txData[4]      ; clk          ; clk         ; 1.000        ; -0.003     ; 5.568      ;
; -4.531 ; controller:inst2|ioCount[7]        ; controller:inst2|txData[0]      ; clk          ; clk         ; 1.000        ; -0.007     ; 5.560      ;
; -4.522 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|txData[1]      ; clk          ; clk         ; 1.000        ; -0.002     ; 5.556      ;
; -4.516 ; controller:inst2|ioCount[6]        ; controller:inst2|txData[2]      ; clk          ; clk         ; 1.000        ; -0.007     ; 5.545      ;
; -4.498 ; controller:inst2|message.MSG_NONE  ; controller:inst2|txData[2]      ; clk          ; clk         ; 1.000        ; -0.005     ; 5.529      ;
; -4.450 ; controller:inst2|ioCount[1]        ; controller:inst2|txData[4]      ; clk          ; clk         ; 1.000        ; -0.003     ; 5.483      ;
; -4.440 ; controller:inst2|ioCount[7]        ; controller:inst2|txData[4]      ; clk          ; clk         ; 1.000        ; -0.003     ; 5.473      ;
; -4.437 ; controller:inst2|ioCount[0]        ; controller:inst2|txData[0]      ; clk          ; clk         ; 1.000        ; -0.007     ; 5.466      ;
; -4.423 ; controller:inst2|ioCount[7]        ; controller:inst2|txData[2]      ; clk          ; clk         ; 1.000        ; -0.007     ; 5.452      ;
; -4.364 ; controller:inst2|message.MSG_NONE  ; controller:inst2|txData[0]      ; clk          ; clk         ; 1.000        ; -0.005     ; 5.395      ;
; -4.336 ; controller:inst2|ioCount[4]        ; controller:inst2|txData[1]      ; clk          ; clk         ; 1.000        ; 0.007      ; 5.379      ;
; -4.325 ; controller:inst2|ioCount[1]        ; controller:inst2|txData[1]      ; clk          ; clk         ; 1.000        ; 0.007      ; 5.368      ;
; -4.320 ; controller:inst2|message.MSG_NONE  ; controller:inst2|txData[4]      ; clk          ; clk         ; 1.000        ; -0.001     ; 5.355      ;
; -4.228 ; controller:inst2|ioCount[7]        ; controller:inst2|txData[1]      ; clk          ; clk         ; 1.000        ; 0.007      ; 5.271      ;
; -4.049 ; controller:inst2|message.MSG_NONE  ; controller:inst2|txData[1]      ; clk          ; clk         ; 1.000        ; 0.009      ; 5.094      ;
; -4.030 ; controller:inst2|message.MSG_ERROR ; controller:inst2|txData[4]      ; clk          ; clk         ; 1.000        ; -0.001     ; 5.065      ;
; -3.990 ; controller:inst2|ioCount[3]        ; controller:inst2|txData[4]      ; clk          ; clk         ; 1.000        ; -0.003     ; 5.023      ;
; -3.950 ; controller:inst2|ioCount[0]        ; controller:inst2|txData[1]      ; clk          ; clk         ; 1.000        ; 0.007      ; 4.993      ;
; -3.896 ; controller:inst2|ioCount[2]        ; controller:inst2|txData[0]      ; clk          ; clk         ; 1.000        ; -0.007     ; 4.925      ;
; -3.886 ; controller:inst2|ioCount[0]        ; controller:inst2|txData[3]      ; clk          ; clk         ; 1.000        ; 0.004      ; 4.926      ;
; -3.840 ; controller:inst2|ioCount[4]        ; controller:inst2|txData[3]      ; clk          ; clk         ; 1.000        ; 0.004      ; 4.880      ;
; -3.797 ; controller:inst2|ioCount[1]        ; controller:inst2|txData[3]      ; clk          ; clk         ; 1.000        ; 0.004      ; 4.837      ;
; -3.724 ; controller:inst2|ioCount[5]        ; controller:inst2|txData[0]      ; clk          ; clk         ; 1.000        ; -0.007     ; 4.753      ;
; -3.665 ; controller:inst2|ioCount[0]        ; controller:inst2|txData[6]      ; clk          ; clk         ; 1.000        ; -0.010     ; 4.691      ;
; -3.582 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[0]     ; clk          ; clk         ; 1.000        ; -0.009     ; 4.609      ;
; -3.582 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[1]     ; clk          ; clk         ; 1.000        ; -0.009     ; 4.609      ;
; -3.582 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[2]     ; clk          ; clk         ; 1.000        ; -0.009     ; 4.609      ;
; -3.582 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[3]     ; clk          ; clk         ; 1.000        ; -0.009     ; 4.609      ;
; -3.582 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[4]     ; clk          ; clk         ; 1.000        ; -0.009     ; 4.609      ;
; -3.582 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[5]     ; clk          ; clk         ; 1.000        ; -0.009     ; 4.609      ;
; -3.582 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[6]     ; clk          ; clk         ; 1.000        ; -0.009     ; 4.609      ;
; -3.582 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[7]     ; clk          ; clk         ; 1.000        ; -0.009     ; 4.609      ;
; -3.582 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[8]     ; clk          ; clk         ; 1.000        ; -0.009     ; 4.609      ;
; -3.582 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[9]     ; clk          ; clk         ; 1.000        ; -0.009     ; 4.609      ;
; -3.582 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[10]    ; clk          ; clk         ; 1.000        ; -0.009     ; 4.609      ;
; -3.582 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[11]    ; clk          ; clk         ; 1.000        ; -0.009     ; 4.609      ;
; -3.582 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[12]    ; clk          ; clk         ; 1.000        ; -0.009     ; 4.609      ;
; -3.582 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[13]    ; clk          ; clk         ; 1.000        ; -0.009     ; 4.609      ;
; -3.582 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[14]    ; clk          ; clk         ; 1.000        ; -0.009     ; 4.609      ;
; -3.582 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[15]    ; clk          ; clk         ; 1.000        ; -0.009     ; 4.609      ;
; -3.569 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|txData[3]      ; clk          ; clk         ; 1.000        ; -0.005     ; 4.600      ;
; -3.548 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|txData[5]      ; clk          ; clk         ; 1.000        ; 0.000      ; 4.584      ;
; -3.545 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|state.w1_state ; clk          ; clk         ; 1.000        ; -0.003     ; 4.578      ;
; -3.544 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|state.r_state  ; clk          ; clk         ; 1.000        ; -0.003     ; 4.577      ;
; -3.531 ; controller:inst2|ioCount[2]        ; controller:inst2|txData[3]      ; clk          ; clk         ; 1.000        ; 0.004      ; 4.571      ;
; -3.514 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[0]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.550      ;
; -3.514 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[1]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.550      ;
; -3.514 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[2]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.550      ;
; -3.514 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[3]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.550      ;
; -3.514 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[4]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.550      ;
; -3.514 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[5]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.550      ;
; -3.514 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[6]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.550      ;
; -3.514 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[7]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.550      ;
; -3.514 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[8]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.550      ;
; -3.514 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[9]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.550      ;
; -3.514 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[10]    ; clk          ; clk         ; 1.000        ; 0.000      ; 4.550      ;
; -3.514 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[11]    ; clk          ; clk         ; 1.000        ; 0.000      ; 4.550      ;
; -3.514 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[12]    ; clk          ; clk         ; 1.000        ; 0.000      ; 4.550      ;
; -3.514 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[13]    ; clk          ; clk         ; 1.000        ; 0.000      ; 4.550      ;
; -3.514 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[14]    ; clk          ; clk         ; 1.000        ; 0.000      ; 4.550      ;
; -3.514 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[15]    ; clk          ; clk         ; 1.000        ; 0.000      ; 4.550      ;
; -3.510 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[0]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.546      ;
; -3.510 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[1]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.546      ;
; -3.510 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[2]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.546      ;
; -3.510 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[3]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.546      ;
; -3.510 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[4]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.546      ;
; -3.510 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[5]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.546      ;
; -3.510 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[6]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.546      ;
; -3.510 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[7]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.546      ;
; -3.510 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[8]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.546      ;
; -3.510 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[9]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.546      ;
; -3.510 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[10]    ; clk          ; clk         ; 1.000        ; 0.000      ; 4.546      ;
; -3.510 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[11]    ; clk          ; clk         ; 1.000        ; 0.000      ; 4.546      ;
; -3.510 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[12]    ; clk          ; clk         ; 1.000        ; 0.000      ; 4.546      ;
; -3.510 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[13]    ; clk          ; clk         ; 1.000        ; 0.000      ; 4.546      ;
; -3.510 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[14]    ; clk          ; clk         ; 1.000        ; 0.000      ; 4.546      ;
; -3.510 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[15]    ; clk          ; clk         ; 1.000        ; 0.000      ; 4.546      ;
; -3.503 ; controller:inst2|ioCount[7]        ; controller:inst2|txData[6]      ; clk          ; clk         ; 1.000        ; -0.010     ; 4.529      ;
; -3.502 ; controller:inst2|ioCount[4]        ; controller:inst2|txData[6]      ; clk          ; clk         ; 1.000        ; -0.010     ; 4.528      ;
; -3.489 ; controller:inst2|ioCount[7]        ; controller:inst2|txData[3]      ; clk          ; clk         ; 1.000        ; 0.004      ; 4.529      ;
; -3.477 ; controller:inst2|ioCount[11]       ; controller:inst2|state.w1_state ; clk          ; clk         ; 1.000        ; 0.006      ; 4.519      ;
; -3.476 ; controller:inst2|ioCount[11]       ; controller:inst2|state.r_state  ; clk          ; clk         ; 1.000        ; 0.006      ; 4.518      ;
; -3.473 ; controller:inst2|ioCount[1]        ; controller:inst2|txData[5]      ; clk          ; clk         ; 1.000        ; 0.009      ; 4.518      ;
; -3.473 ; controller:inst2|ioCount[7]        ; controller:inst2|state.w1_state ; clk          ; clk         ; 1.000        ; 0.006      ; 4.515      ;
; -3.473 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|txData[6]      ; clk          ; clk         ; 1.000        ; -0.019     ; 4.490      ;
; -3.472 ; controller:inst2|ioCount[7]        ; controller:inst2|state.r_state  ; clk          ; clk         ; 1.000        ; 0.006      ; 4.514      ;
; -3.448 ; controller:inst2|message.MSG_NONE  ; controller:inst2|txData[3]      ; clk          ; clk         ; 1.000        ; 0.006      ; 4.490      ;
; -3.431 ; controller:inst2|ioCount[0]        ; controller:inst2|ioCount[0]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.467      ;
; -3.431 ; controller:inst2|ioCount[0]        ; controller:inst2|ioCount[1]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.467      ;
; -3.431 ; controller:inst2|ioCount[0]        ; controller:inst2|ioCount[2]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.467      ;
; -3.431 ; controller:inst2|ioCount[0]        ; controller:inst2|ioCount[3]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.467      ;
+--------+------------------------------------+---------------------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk'                                                                                                                                                                  ;
+-------+-----------------------------------------------------+-----------------------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                                           ; To Node                                             ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------------------------------------------------+-----------------------------------------------------+--------------+-------------+--------------+------------+------------+
; 0.391 ; async_transmitter:inst1|TxD_state[1]                ; async_transmitter:inst1|TxD_state[1]                ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; async_receiver:inst|BaudTickGen:tickgen|Acc[1]      ; async_receiver:inst|BaudTickGen:tickgen|Acc[1]      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; async_receiver:inst|OversamplingCnt[3]              ; async_receiver:inst|OversamplingCnt[3]              ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; async_receiver:inst|Filter_cnt[1]                   ; async_receiver:inst|Filter_cnt[1]                   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; async_receiver:inst|Filter_cnt[0]                   ; async_receiver:inst|Filter_cnt[0]                   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; async_receiver:inst|RxD_bit                         ; async_receiver:inst|RxD_bit                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; async_receiver:inst|RxD_state[0]                    ; async_receiver:inst|RxD_state[0]                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; async_receiver:inst|OversamplingCnt[0]              ; async_receiver:inst|OversamplingCnt[0]              ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; async_receiver:inst|OversamplingCnt[1]              ; async_receiver:inst|OversamplingCnt[1]              ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; async_receiver:inst|OversamplingCnt[2]              ; async_receiver:inst|OversamplingCnt[2]              ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; async_receiver:inst|RxD_state[3]                    ; async_receiver:inst|RxD_state[3]                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; async_receiver:inst|RxD_state[1]                    ; async_receiver:inst|RxD_state[1]                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; async_receiver:inst|RxD_state[2]                    ; async_receiver:inst|RxD_state[2]                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; controller:inst2|message.MSG_BEGIN                  ; controller:inst2|message.MSG_BEGIN                  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; async_transmitter:inst1|TxD_state[0]                ; async_transmitter:inst1|TxD_state[0]                ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; async_transmitter:inst1|TxD_state[3]                ; async_transmitter:inst1|TxD_state[3]                ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; async_transmitter:inst1|TxD_shift[7]                ; async_transmitter:inst1|TxD_shift[7]                ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.517 ; async_transmitter:inst1|TxD_shift[2]                ; async_transmitter:inst1|TxD_shift[1]                ; clk          ; clk         ; 0.000        ; 0.000      ; 0.783      ;
; 0.529 ; async_receiver:inst|RxD_sync[0]                     ; async_receiver:inst|RxD_sync[1]                     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.795      ;
; 0.530 ; async_receiver:inst|RxD_data[5]                     ; controller:inst2|verbose[5]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.796      ;
; 0.531 ; controller:inst2|ioCount[31]                        ; controller:inst2|ioCount[31]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.797      ;
; 0.531 ; async_receiver:inst|Filter_cnt[1]                   ; async_receiver:inst|Filter_cnt[0]                   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.797      ;
; 0.532 ; async_receiver:inst|RxD_data[5]                     ; async_receiver:inst|RxD_data[4]                     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.798      ;
; 0.532 ; async_receiver:inst|OversamplingCnt[0]              ; async_receiver:inst|OversamplingCnt[2]              ; clk          ; clk         ; 0.000        ; 0.000      ; 0.798      ;
; 0.534 ; async_receiver:inst|RxD_data[6]                     ; controller:inst2|verbose[6]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.800      ;
; 0.535 ; async_receiver:inst|RxD_data[4]                     ; controller:inst2|verbose[4]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.801      ;
; 0.537 ; async_receiver:inst|RxD_data[2]                     ; controller:inst2|verbose[2]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.803      ;
; 0.537 ; async_receiver:inst|OversamplingCnt[0]              ; async_receiver:inst|OversamplingCnt[1]              ; clk          ; clk         ; 0.000        ; 0.000      ; 0.803      ;
; 0.545 ; async_receiver:inst|RxD_data[7]                     ; controller:inst2|verbose[7]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.811      ;
; 0.546 ; async_receiver:inst|RxD_data[7]                     ; async_receiver:inst|RxD_data[6]                     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.812      ;
; 0.556 ; async_receiver:inst|RxD_state[1]                    ; async_receiver:inst|RxD_state[2]                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.822      ;
; 0.557 ; async_receiver:inst|RxD_state[1]                    ; async_receiver:inst|RxD_state[3]                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.823      ;
; 0.620 ; async_transmitter:inst1|TxD_state[3]                ; async_transmitter:inst1|TxD_state[0]                ; clk          ; clk         ; 0.000        ; 0.000      ; 0.886      ;
; 0.621 ; async_transmitter:inst1|TxD_state[0]                ; async_transmitter:inst1|TxD_state[1]                ; clk          ; clk         ; 0.000        ; 0.000      ; 0.887      ;
; 0.675 ; async_receiver:inst|RxD_data[3]                     ; controller:inst2|verbose[3]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.941      ;
; 0.677 ; async_receiver:inst|RxD_data[3]                     ; async_receiver:inst|RxD_data[2]                     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.943      ;
; 0.682 ; async_receiver:inst|RxD_data[1]                     ; async_receiver:inst|RxD_data[0]                     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.948      ;
; 0.683 ; async_receiver:inst|RxD_data[1]                     ; controller:inst2|verbose[1]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.949      ;
; 0.703 ; async_receiver:inst|Filter_cnt[0]                   ; async_receiver:inst|Filter_cnt[1]                   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.969      ;
; 0.704 ; async_receiver:inst|Filter_cnt[0]                   ; async_receiver:inst|RxD_bit                         ; clk          ; clk         ; 0.000        ; -0.001     ; 0.969      ;
; 0.742 ; controller:inst2|txData[0]                          ; async_transmitter:inst1|TxD_shift[0]                ; clk          ; clk         ; 0.000        ; 0.004      ; 1.012      ;
; 0.761 ; async_receiver:inst|BaudTickGen:tickgen|Acc[3]      ; async_receiver:inst|BaudTickGen:tickgen|Acc[3]      ; clk          ; clk         ; 0.000        ; 0.000      ; 1.027      ;
; 0.767 ; async_receiver:inst|BaudTickGen:tickgen|Acc[5]      ; async_receiver:inst|BaudTickGen:tickgen|Acc[5]      ; clk          ; clk         ; 0.000        ; 0.000      ; 1.033      ;
; 0.772 ; async_receiver:inst|BaudTickGen:tickgen|Acc[11]     ; async_receiver:inst|BaudTickGen:tickgen|Acc[11]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.038      ;
; 0.788 ; async_receiver:inst|BaudTickGen:tickgen|Acc[12]     ; async_receiver:inst|BaudTickGen:tickgen|Acc[12]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.054      ;
; 0.788 ; async_receiver:inst|BaudTickGen:tickgen|Acc[13]     ; async_receiver:inst|BaudTickGen:tickgen|Acc[13]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.054      ;
; 0.788 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[2]  ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[2]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.054      ;
; 0.792 ; async_receiver:inst|BaudTickGen:tickgen|Acc[1]      ; async_receiver:inst|BaudTickGen:tickgen|Acc[2]      ; clk          ; clk         ; 0.000        ; 0.000      ; 1.058      ;
; 0.793 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[11] ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[11] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.059      ;
; 0.793 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[12] ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[12] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.059      ;
; 0.793 ; async_transmitter:inst1|TxD_shift[6]                ; async_transmitter:inst1|TxD_shift[5]                ; clk          ; clk         ; 0.000        ; 0.000      ; 1.059      ;
; 0.794 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[4]  ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[4]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.060      ;
; 0.794 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[20] ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[20] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.060      ;
; 0.795 ; async_receiver:inst|BaudTickGen:tickgen|Acc[7]      ; async_receiver:inst|BaudTickGen:tickgen|Acc[7]      ; clk          ; clk         ; 0.000        ; 0.000      ; 1.061      ;
; 0.795 ; controller:inst2|ioCount[16]                        ; controller:inst2|ioCount[16]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 1.061      ;
; 0.795 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[6]  ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[6]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.061      ;
; 0.795 ; async_transmitter:inst1|TxD_shift[7]                ; async_transmitter:inst1|TxD_shift[6]                ; clk          ; clk         ; 0.000        ; 0.000      ; 1.061      ;
; 0.795 ; async_transmitter:inst1|TxD_shift[4]                ; async_transmitter:inst1|TxD_shift[3]                ; clk          ; clk         ; 0.000        ; 0.000      ; 1.061      ;
; 0.796 ; async_transmitter:inst1|TxD_shift[5]                ; async_transmitter:inst1|TxD_shift[4]                ; clk          ; clk         ; 0.000        ; 0.000      ; 1.062      ;
; 0.796 ; async_transmitter:inst1|TxD_shift[3]                ; async_transmitter:inst1|TxD_shift[2]                ; clk          ; clk         ; 0.000        ; 0.000      ; 1.062      ;
; 0.798 ; async_receiver:inst|OversamplingCnt[1]              ; async_receiver:inst|OversamplingCnt[2]              ; clk          ; clk         ; 0.000        ; 0.000      ; 1.064      ;
; 0.799 ; async_receiver:inst|BaudTickGen:tickgen|Acc[9]      ; async_receiver:inst|BaudTickGen:tickgen|Acc[9]      ; clk          ; clk         ; 0.000        ; 0.000      ; 1.065      ;
; 0.799 ; async_receiver:inst|BaudTickGen:tickgen|Acc[10]     ; async_receiver:inst|BaudTickGen:tickgen|Acc[10]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.065      ;
; 0.799 ; async_receiver:inst|BaudTickGen:tickgen|Acc[14]     ; async_receiver:inst|BaudTickGen:tickgen|Acc[14]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.065      ;
; 0.799 ; async_receiver:inst|BaudTickGen:tickgen|Acc[16]     ; async_receiver:inst|BaudTickGen:tickgen|Acc[16]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.065      ;
; 0.799 ; async_receiver:inst|BaudTickGen:tickgen|Acc[19]     ; async_receiver:inst|BaudTickGen:tickgen|Acc[19]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.065      ;
; 0.799 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[8]  ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[8]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.065      ;
; 0.799 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[9]  ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[9]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.065      ;
; 0.799 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[10] ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[10] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.065      ;
; 0.799 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[13] ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[13] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.065      ;
; 0.799 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[15] ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[15] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.065      ;
; 0.799 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[18] ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[18] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.065      ;
; 0.801 ; async_receiver:inst|RxD_sync[1]                     ; async_receiver:inst|Filter_cnt[1]                   ; clk          ; clk         ; 0.000        ; 0.000      ; 1.067      ;
; 0.803 ; controller:inst2|ioCount[0]                         ; controller:inst2|ioCount[0]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 1.069      ;
; 0.803 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[1]  ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[1]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.069      ;
; 0.803 ; async_receiver:inst|RxD_sync[1]                     ; async_receiver:inst|Filter_cnt[0]                   ; clk          ; clk         ; 0.000        ; 0.000      ; 1.069      ;
; 0.805 ; controller:inst2|ioCount[17]                        ; controller:inst2|ioCount[17]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 1.071      ;
; 0.806 ; controller:inst2|ioCount[9]                         ; controller:inst2|ioCount[9]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 1.072      ;
; 0.806 ; controller:inst2|ioCount[11]                        ; controller:inst2|ioCount[11]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 1.072      ;
; 0.806 ; controller:inst2|ioCount[13]                        ; controller:inst2|ioCount[13]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 1.072      ;
; 0.806 ; controller:inst2|ioCount[14]                        ; controller:inst2|ioCount[14]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 1.072      ;
; 0.806 ; controller:inst2|ioCount[15]                        ; controller:inst2|ioCount[15]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 1.072      ;
; 0.806 ; controller:inst2|ioCount[18]                        ; controller:inst2|ioCount[18]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 1.072      ;
; 0.806 ; controller:inst2|ioCount[20]                        ; controller:inst2|ioCount[20]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 1.072      ;
; 0.806 ; controller:inst2|ioCount[23]                        ; controller:inst2|ioCount[23]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 1.072      ;
; 0.806 ; controller:inst2|ioCount[25]                        ; controller:inst2|ioCount[25]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 1.072      ;
; 0.806 ; controller:inst2|ioCount[27]                        ; controller:inst2|ioCount[27]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 1.072      ;
; 0.806 ; controller:inst2|ioCount[29]                        ; controller:inst2|ioCount[29]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 1.072      ;
; 0.806 ; controller:inst2|ioCount[30]                        ; controller:inst2|ioCount[30]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 1.072      ;
; 0.806 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[7]  ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[7]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.072      ;
; 0.808 ; async_receiver:inst|RxD_state[3]                    ; async_receiver:inst|RxD_data_ready                  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.074      ;
; 0.813 ; controller:inst2|ioCount[1]                         ; controller:inst2|ioCount[1]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 1.079      ;
; 0.814 ; controller:inst2|ioCount[2]                         ; controller:inst2|ioCount[2]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 1.080      ;
; 0.814 ; controller:inst2|ioCount[4]                         ; controller:inst2|ioCount[4]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 1.080      ;
; 0.814 ; controller:inst2|ioCount[7]                         ; controller:inst2|ioCount[7]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 1.080      ;
; 0.817 ; controller:inst2|state.w2_state                     ; controller:inst2|message.MSG_BEGIN                  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.083      ;
; 0.820 ; async_receiver:inst|BaudTickGen:tickgen|Acc[20]     ; async_receiver:inst|BaudTickGen:tickgen|Acc[20]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.086      ;
; 0.820 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[19] ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[19] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.086      ;
; 0.820 ; async_receiver:inst|BaudTickGen:tickgen|Acc[2]      ; async_receiver:inst|BaudTickGen:tickgen|Acc[2]      ; clk          ; clk         ; 0.000        ; 0.000      ; 1.086      ;
; 0.828 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[0]  ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[0]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.094      ;
+-------+-----------------------------------------------------+-----------------------------------------------------+--------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk'                                                                                                ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                                              ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clk   ; Rise       ; clk                                                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[10]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[10]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[11]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[11]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[12]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[12]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[13]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[13]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[14]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[14]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[15]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[15]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[16]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[16]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[17]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[17]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[18]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[18]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[19]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[19]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[1]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[1]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[20]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[20]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[21]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[21]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[2]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[2]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[3]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[3]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[4]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[4]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[5]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[5]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[6]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[6]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[7]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[7]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[8]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[8]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[9]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[9]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|Filter_cnt[0]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|Filter_cnt[0]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|Filter_cnt[1]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|Filter_cnt[1]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|OversamplingCnt[0]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|OversamplingCnt[0]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|OversamplingCnt[1]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|OversamplingCnt[1]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|OversamplingCnt[2]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|OversamplingCnt[2]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|OversamplingCnt[3]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|OversamplingCnt[3]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_bit                         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_bit                         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_data[0]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_data[0]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_data[1]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_data[1]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_data[2]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_data[2]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_data[3]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_data[3]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_data[4]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_data[4]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_data[5]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_data[5]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_data[6]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_data[6]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_data[7]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_data[7]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_data_ready                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_data_ready                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_state[0]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_state[0]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_state[1]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_state[1]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_state[2]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_state[2]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_state[3]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_state[3]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_sync[0]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_sync[0]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_sync[1]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_sync[1]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[10] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[10] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[11] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[11] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[12] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[12] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[13] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[13] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[14] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[14] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[15] ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; 232_in    ; clk        ; 4.485 ; 4.485 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; 232_in    ; clk        ; -4.255 ; -4.255 ; Rise       ; clk             ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------+
; Clock to Output Times                                                 ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; 232_out   ; clk        ; 9.097 ; 9.097 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-----------------------------------------------------------------------+
; Minimum Clock to Output Times                                         ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; 232_out   ; clk        ; 8.757 ; 8.757 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+--------------------------------+
; Fast Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; clk   ; -1.494 ; -64.443       ;
+-------+--------+---------------+


+-------------------------------+
; Fast Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; clk   ; 0.215 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Fast Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; clk   ; -1.380 ; -134.380              ;
+-------+--------+-----------------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk'                                                                                                                          ;
+--------+------------------------------------+------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                          ; To Node                      ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------------------+------------------------------+--------------+-------------+--------------+------------+------------+
; -1.494 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|txData[0]   ; clk          ; clk         ; 1.000        ; -0.015     ; 2.511      ;
; -1.479 ; controller:inst2|ioCount[1]        ; controller:inst2|txData[0]   ; clk          ; clk         ; 1.000        ; -0.006     ; 2.505      ;
; -1.465 ; controller:inst2|ioCount[0]        ; controller:inst2|txData[2]   ; clk          ; clk         ; 1.000        ; -0.006     ; 2.491      ;
; -1.463 ; controller:inst2|ioCount[4]        ; controller:inst2|txData[2]   ; clk          ; clk         ; 1.000        ; -0.006     ; 2.489      ;
; -1.457 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|txData[2]   ; clk          ; clk         ; 1.000        ; -0.015     ; 2.474      ;
; -1.446 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|txData[4]   ; clk          ; clk         ; 1.000        ; -0.012     ; 2.466      ;
; -1.435 ; controller:inst2|ioCount[4]        ; controller:inst2|txData[0]   ; clk          ; clk         ; 1.000        ; -0.006     ; 2.461      ;
; -1.430 ; controller:inst2|ioCount[5]        ; controller:inst2|txData[2]   ; clk          ; clk         ; 1.000        ; -0.006     ; 2.456      ;
; -1.425 ; controller:inst2|ioCount[1]        ; controller:inst2|txData[2]   ; clk          ; clk         ; 1.000        ; -0.006     ; 2.451      ;
; -1.406 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|txData[1]   ; clk          ; clk         ; 1.000        ; -0.002     ; 2.436      ;
; -1.394 ; controller:inst2|ioCount[7]        ; controller:inst2|txData[0]   ; clk          ; clk         ; 1.000        ; -0.006     ; 2.420      ;
; -1.394 ; controller:inst2|ioCount[6]        ; controller:inst2|txData[2]   ; clk          ; clk         ; 1.000        ; -0.006     ; 2.420      ;
; -1.387 ; controller:inst2|ioCount[4]        ; controller:inst2|txData[4]   ; clk          ; clk         ; 1.000        ; -0.003     ; 2.416      ;
; -1.375 ; controller:inst2|ioCount[0]        ; controller:inst2|txData[0]   ; clk          ; clk         ; 1.000        ; -0.006     ; 2.401      ;
; -1.374 ; controller:inst2|message.MSG_NONE  ; controller:inst2|txData[2]   ; clk          ; clk         ; 1.000        ; -0.005     ; 2.401      ;
; -1.354 ; controller:inst2|ioCount[7]        ; controller:inst2|txData[2]   ; clk          ; clk         ; 1.000        ; -0.006     ; 2.380      ;
; -1.346 ; controller:inst2|ioCount[7]        ; controller:inst2|txData[4]   ; clk          ; clk         ; 1.000        ; -0.003     ; 2.375      ;
; -1.340 ; controller:inst2|ioCount[1]        ; controller:inst2|txData[4]   ; clk          ; clk         ; 1.000        ; -0.003     ; 2.369      ;
; -1.330 ; controller:inst2|ioCount[1]        ; controller:inst2|txData[1]   ; clk          ; clk         ; 1.000        ; 0.007      ; 2.369      ;
; -1.315 ; controller:inst2|message.MSG_NONE  ; controller:inst2|txData[0]   ; clk          ; clk         ; 1.000        ; -0.005     ; 2.342      ;
; -1.298 ; controller:inst2|ioCount[4]        ; controller:inst2|txData[1]   ; clk          ; clk         ; 1.000        ; 0.007      ; 2.337      ;
; -1.283 ; controller:inst2|message.MSG_NONE  ; controller:inst2|txData[4]   ; clk          ; clk         ; 1.000        ; -0.002     ; 2.313      ;
; -1.266 ; controller:inst2|ioCount[7]        ; controller:inst2|txData[1]   ; clk          ; clk         ; 1.000        ; 0.007      ; 2.305      ;
; -1.184 ; controller:inst2|message.MSG_NONE  ; controller:inst2|txData[1]   ; clk          ; clk         ; 1.000        ; 0.008      ; 2.224      ;
; -1.150 ; controller:inst2|ioCount[0]        ; controller:inst2|txData[1]   ; clk          ; clk         ; 1.000        ; 0.007      ; 2.189      ;
; -1.144 ; controller:inst2|ioCount[0]        ; controller:inst2|txData[3]   ; clk          ; clk         ; 1.000        ; 0.002      ; 2.178      ;
; -1.141 ; controller:inst2|ioCount[3]        ; controller:inst2|txData[4]   ; clk          ; clk         ; 1.000        ; -0.003     ; 2.170      ;
; -1.141 ; controller:inst2|message.MSG_ERROR ; controller:inst2|txData[4]   ; clk          ; clk         ; 1.000        ; -0.002     ; 2.171      ;
; -1.140 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[0]  ; clk          ; clk         ; 1.000        ; -0.009     ; 2.163      ;
; -1.140 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[1]  ; clk          ; clk         ; 1.000        ; -0.009     ; 2.163      ;
; -1.140 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[2]  ; clk          ; clk         ; 1.000        ; -0.009     ; 2.163      ;
; -1.140 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[3]  ; clk          ; clk         ; 1.000        ; -0.009     ; 2.163      ;
; -1.140 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[4]  ; clk          ; clk         ; 1.000        ; -0.009     ; 2.163      ;
; -1.140 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[5]  ; clk          ; clk         ; 1.000        ; -0.009     ; 2.163      ;
; -1.140 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[6]  ; clk          ; clk         ; 1.000        ; -0.009     ; 2.163      ;
; -1.140 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[7]  ; clk          ; clk         ; 1.000        ; -0.009     ; 2.163      ;
; -1.140 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[8]  ; clk          ; clk         ; 1.000        ; -0.009     ; 2.163      ;
; -1.140 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[9]  ; clk          ; clk         ; 1.000        ; -0.009     ; 2.163      ;
; -1.140 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[10] ; clk          ; clk         ; 1.000        ; -0.009     ; 2.163      ;
; -1.140 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[11] ; clk          ; clk         ; 1.000        ; -0.009     ; 2.163      ;
; -1.140 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[12] ; clk          ; clk         ; 1.000        ; -0.009     ; 2.163      ;
; -1.140 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[13] ; clk          ; clk         ; 1.000        ; -0.009     ; 2.163      ;
; -1.140 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[14] ; clk          ; clk         ; 1.000        ; -0.009     ; 2.163      ;
; -1.140 ; controller:inst2|message.MSG_BEGIN ; controller:inst2|ioCount[15] ; clk          ; clk         ; 1.000        ; -0.009     ; 2.163      ;
; -1.127 ; controller:inst2|ioCount[2]        ; controller:inst2|txData[0]   ; clk          ; clk         ; 1.000        ; -0.006     ; 2.153      ;
; -1.113 ; controller:inst2|ioCount[4]        ; controller:inst2|txData[3]   ; clk          ; clk         ; 1.000        ; 0.002      ; 2.147      ;
; -1.104 ; controller:inst2|ioCount[1]        ; controller:inst2|txData[3]   ; clk          ; clk         ; 1.000        ; 0.002      ; 2.138      ;
; -1.086 ; controller:inst2|ioCount[5]        ; controller:inst2|txData[0]   ; clk          ; clk         ; 1.000        ; -0.006     ; 2.112      ;
; -1.082 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.114      ;
; -1.082 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.114      ;
; -1.082 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.114      ;
; -1.082 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.114      ;
; -1.082 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.114      ;
; -1.082 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.114      ;
; -1.082 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.114      ;
; -1.082 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[7]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.114      ;
; -1.082 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.114      ;
; -1.082 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[9]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.114      ;
; -1.082 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.114      ;
; -1.082 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.114      ;
; -1.082 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[12] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.114      ;
; -1.082 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[13] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.114      ;
; -1.082 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[14] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.114      ;
; -1.082 ; controller:inst2|ioCount[7]        ; controller:inst2|ioCount[15] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.114      ;
; -1.076 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.108      ;
; -1.076 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.108      ;
; -1.076 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.108      ;
; -1.076 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.108      ;
; -1.076 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.108      ;
; -1.076 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.108      ;
; -1.076 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.108      ;
; -1.076 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[7]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.108      ;
; -1.076 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.108      ;
; -1.076 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[9]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.108      ;
; -1.076 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.108      ;
; -1.076 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.108      ;
; -1.076 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[12] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.108      ;
; -1.076 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[13] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.108      ;
; -1.076 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[14] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.108      ;
; -1.076 ; controller:inst2|ioCount[11]       ; controller:inst2|ioCount[15] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.108      ;
; -1.070 ; controller:inst2|ioCount[0]        ; controller:inst2|txData[6]   ; clk          ; clk         ; 1.000        ; -0.009     ; 2.093      ;
; -1.064 ; controller:inst2|ioCount[10]       ; controller:inst2|ioCount[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.096      ;
; -1.064 ; controller:inst2|ioCount[10]       ; controller:inst2|ioCount[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.096      ;
; -1.064 ; controller:inst2|ioCount[10]       ; controller:inst2|ioCount[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.096      ;
; -1.064 ; controller:inst2|ioCount[10]       ; controller:inst2|ioCount[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.096      ;
; -1.064 ; controller:inst2|ioCount[10]       ; controller:inst2|ioCount[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.096      ;
; -1.064 ; controller:inst2|ioCount[10]       ; controller:inst2|ioCount[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.096      ;
; -1.064 ; controller:inst2|ioCount[10]       ; controller:inst2|ioCount[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.096      ;
; -1.064 ; controller:inst2|ioCount[10]       ; controller:inst2|ioCount[7]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.096      ;
; -1.064 ; controller:inst2|ioCount[10]       ; controller:inst2|ioCount[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.096      ;
; -1.064 ; controller:inst2|ioCount[10]       ; controller:inst2|ioCount[9]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.096      ;
; -1.064 ; controller:inst2|ioCount[10]       ; controller:inst2|ioCount[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.096      ;
; -1.064 ; controller:inst2|ioCount[10]       ; controller:inst2|ioCount[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.096      ;
; -1.064 ; controller:inst2|ioCount[10]       ; controller:inst2|ioCount[12] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.096      ;
; -1.064 ; controller:inst2|ioCount[10]       ; controller:inst2|ioCount[13] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.096      ;
; -1.064 ; controller:inst2|ioCount[10]       ; controller:inst2|ioCount[14] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.096      ;
; -1.064 ; controller:inst2|ioCount[10]       ; controller:inst2|ioCount[15] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.096      ;
; -1.047 ; controller:inst2|ioCount[8]        ; controller:inst2|ioCount[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.079      ;
; -1.047 ; controller:inst2|ioCount[8]        ; controller:inst2|ioCount[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.079      ;
; -1.047 ; controller:inst2|ioCount[8]        ; controller:inst2|ioCount[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.079      ;
+--------+------------------------------------+------------------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk'                                                                                                                                                                  ;
+-------+-----------------------------------------------------+-----------------------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                                           ; To Node                                             ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------------------------------------------------+-----------------------------------------------------+--------------+-------------+--------------+------------+------------+
; 0.215 ; async_transmitter:inst1|TxD_state[1]                ; async_transmitter:inst1|TxD_state[1]                ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; async_receiver:inst|BaudTickGen:tickgen|Acc[1]      ; async_receiver:inst|BaudTickGen:tickgen|Acc[1]      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; async_receiver:inst|OversamplingCnt[3]              ; async_receiver:inst|OversamplingCnt[3]              ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; async_receiver:inst|Filter_cnt[1]                   ; async_receiver:inst|Filter_cnt[1]                   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; async_receiver:inst|Filter_cnt[0]                   ; async_receiver:inst|Filter_cnt[0]                   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; async_receiver:inst|RxD_bit                         ; async_receiver:inst|RxD_bit                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; async_receiver:inst|RxD_state[0]                    ; async_receiver:inst|RxD_state[0]                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; async_receiver:inst|OversamplingCnt[0]              ; async_receiver:inst|OversamplingCnt[0]              ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; async_receiver:inst|OversamplingCnt[1]              ; async_receiver:inst|OversamplingCnt[1]              ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; async_receiver:inst|OversamplingCnt[2]              ; async_receiver:inst|OversamplingCnt[2]              ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; async_receiver:inst|RxD_state[3]                    ; async_receiver:inst|RxD_state[3]                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; async_receiver:inst|RxD_state[1]                    ; async_receiver:inst|RxD_state[1]                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; async_receiver:inst|RxD_state[2]                    ; async_receiver:inst|RxD_state[2]                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; controller:inst2|message.MSG_BEGIN                  ; controller:inst2|message.MSG_BEGIN                  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; async_transmitter:inst1|TxD_state[0]                ; async_transmitter:inst1|TxD_state[0]                ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; async_transmitter:inst1|TxD_state[3]                ; async_transmitter:inst1|TxD_state[3]                ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; async_transmitter:inst1|TxD_shift[7]                ; async_transmitter:inst1|TxD_shift[7]                ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.237 ; async_transmitter:inst1|TxD_shift[2]                ; async_transmitter:inst1|TxD_shift[1]                ; clk          ; clk         ; 0.000        ; 0.000      ; 0.389      ;
; 0.243 ; controller:inst2|ioCount[31]                        ; controller:inst2|ioCount[31]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.395      ;
; 0.244 ; async_receiver:inst|Filter_cnt[1]                   ; async_receiver:inst|Filter_cnt[0]                   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.396      ;
; 0.246 ; async_receiver:inst|RxD_data[5]                     ; controller:inst2|verbose[5]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.398      ;
; 0.246 ; async_receiver:inst|OversamplingCnt[0]              ; async_receiver:inst|OversamplingCnt[2]              ; clk          ; clk         ; 0.000        ; 0.000      ; 0.398      ;
; 0.247 ; async_receiver:inst|RxD_sync[0]                     ; async_receiver:inst|RxD_sync[1]                     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.399      ;
; 0.247 ; async_receiver:inst|RxD_data[2]                     ; controller:inst2|verbose[2]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.399      ;
; 0.247 ; async_receiver:inst|RxD_data[4]                     ; controller:inst2|verbose[4]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.399      ;
; 0.247 ; async_receiver:inst|RxD_data[6]                     ; controller:inst2|verbose[6]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.399      ;
; 0.249 ; async_receiver:inst|RxD_data[5]                     ; async_receiver:inst|RxD_data[4]                     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.401      ;
; 0.252 ; async_receiver:inst|OversamplingCnt[0]              ; async_receiver:inst|OversamplingCnt[1]              ; clk          ; clk         ; 0.000        ; 0.000      ; 0.404      ;
; 0.255 ; async_receiver:inst|RxD_data[7]                     ; controller:inst2|verbose[7]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.407      ;
; 0.256 ; async_receiver:inst|RxD_data[7]                     ; async_receiver:inst|RxD_data[6]                     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.408      ;
; 0.260 ; async_receiver:inst|RxD_state[1]                    ; async_receiver:inst|RxD_state[2]                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.412      ;
; 0.261 ; async_receiver:inst|RxD_state[1]                    ; async_receiver:inst|RxD_state[3]                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.413      ;
; 0.299 ; async_transmitter:inst1|TxD_state[0]                ; async_transmitter:inst1|TxD_state[1]                ; clk          ; clk         ; 0.000        ; 0.000      ; 0.451      ;
; 0.299 ; async_transmitter:inst1|TxD_state[3]                ; async_transmitter:inst1|TxD_state[0]                ; clk          ; clk         ; 0.000        ; 0.000      ; 0.451      ;
; 0.321 ; async_receiver:inst|Filter_cnt[0]                   ; async_receiver:inst|Filter_cnt[1]                   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.473      ;
; 0.323 ; async_receiver:inst|Filter_cnt[0]                   ; async_receiver:inst|RxD_bit                         ; clk          ; clk         ; 0.000        ; -0.002     ; 0.473      ;
; 0.335 ; async_receiver:inst|RxD_data[3]                     ; controller:inst2|verbose[3]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.487      ;
; 0.338 ; async_receiver:inst|RxD_data[3]                     ; async_receiver:inst|RxD_data[2]                     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.490      ;
; 0.341 ; async_receiver:inst|RxD_data[1]                     ; async_receiver:inst|RxD_data[0]                     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.493      ;
; 0.341 ; async_receiver:inst|RxD_data[1]                     ; controller:inst2|verbose[1]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.493      ;
; 0.341 ; controller:inst2|txData[0]                          ; async_transmitter:inst1|TxD_shift[0]                ; clk          ; clk         ; 0.000        ; 0.002      ; 0.495      ;
; 0.353 ; async_receiver:inst|BaudTickGen:tickgen|Acc[12]     ; async_receiver:inst|BaudTickGen:tickgen|Acc[12]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.505      ;
; 0.353 ; async_receiver:inst|BaudTickGen:tickgen|Acc[13]     ; async_receiver:inst|BaudTickGen:tickgen|Acc[13]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.505      ;
; 0.354 ; async_receiver:inst|BaudTickGen:tickgen|Acc[3]      ; async_receiver:inst|BaudTickGen:tickgen|Acc[3]      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.506      ;
; 0.354 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[2]  ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[2]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.506      ;
; 0.355 ; controller:inst2|ioCount[16]                        ; controller:inst2|ioCount[16]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.507      ;
; 0.355 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[12] ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[12] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.507      ;
; 0.355 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[20] ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[20] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.507      ;
; 0.356 ; async_receiver:inst|BaudTickGen:tickgen|Acc[5]      ; async_receiver:inst|BaudTickGen:tickgen|Acc[5]      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.508      ;
; 0.356 ; async_receiver:inst|BaudTickGen:tickgen|Acc[7]      ; async_receiver:inst|BaudTickGen:tickgen|Acc[7]      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.508      ;
; 0.356 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[4]  ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[4]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.508      ;
; 0.356 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[6]  ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[6]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.508      ;
; 0.356 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[11] ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[11] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.508      ;
; 0.358 ; controller:inst2|ioCount[0]                         ; controller:inst2|ioCount[0]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.510      ;
; 0.358 ; async_receiver:inst|BaudTickGen:tickgen|Acc[1]      ; async_receiver:inst|BaudTickGen:tickgen|Acc[2]      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.510      ;
; 0.358 ; async_receiver:inst|BaudTickGen:tickgen|Acc[14]     ; async_receiver:inst|BaudTickGen:tickgen|Acc[14]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.510      ;
; 0.358 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[13] ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[13] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.510      ;
; 0.359 ; async_receiver:inst|BaudTickGen:tickgen|Acc[9]      ; async_receiver:inst|BaudTickGen:tickgen|Acc[9]      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.511      ;
; 0.359 ; async_receiver:inst|BaudTickGen:tickgen|Acc[10]     ; async_receiver:inst|BaudTickGen:tickgen|Acc[10]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.511      ;
; 0.359 ; async_receiver:inst|BaudTickGen:tickgen|Acc[11]     ; async_receiver:inst|BaudTickGen:tickgen|Acc[11]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.511      ;
; 0.359 ; async_receiver:inst|BaudTickGen:tickgen|Acc[16]     ; async_receiver:inst|BaudTickGen:tickgen|Acc[16]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.511      ;
; 0.359 ; async_receiver:inst|BaudTickGen:tickgen|Acc[19]     ; async_receiver:inst|BaudTickGen:tickgen|Acc[19]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.511      ;
; 0.359 ; controller:inst2|ioCount[17]                        ; controller:inst2|ioCount[17]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.511      ;
; 0.359 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[8]  ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[8]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.511      ;
; 0.359 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[9]  ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[9]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.511      ;
; 0.359 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[10] ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[10] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.511      ;
; 0.359 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[15] ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[15] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.511      ;
; 0.359 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[18] ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[18] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.511      ;
; 0.359 ; async_transmitter:inst1|TxD_shift[7]                ; async_transmitter:inst1|TxD_shift[6]                ; clk          ; clk         ; 0.000        ; 0.000      ; 0.511      ;
; 0.359 ; async_transmitter:inst1|TxD_shift[6]                ; async_transmitter:inst1|TxD_shift[5]                ; clk          ; clk         ; 0.000        ; 0.000      ; 0.511      ;
; 0.359 ; async_transmitter:inst1|TxD_shift[4]                ; async_transmitter:inst1|TxD_shift[3]                ; clk          ; clk         ; 0.000        ; 0.000      ; 0.511      ;
; 0.360 ; controller:inst2|ioCount[9]                         ; controller:inst2|ioCount[9]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.512      ;
; 0.360 ; controller:inst2|ioCount[11]                        ; controller:inst2|ioCount[11]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.512      ;
; 0.360 ; controller:inst2|ioCount[18]                        ; controller:inst2|ioCount[18]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.512      ;
; 0.360 ; controller:inst2|ioCount[25]                        ; controller:inst2|ioCount[25]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.512      ;
; 0.360 ; controller:inst2|ioCount[27]                        ; controller:inst2|ioCount[27]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.512      ;
; 0.360 ; async_transmitter:inst1|TxD_shift[5]                ; async_transmitter:inst1|TxD_shift[4]                ; clk          ; clk         ; 0.000        ; 0.000      ; 0.512      ;
; 0.361 ; controller:inst2|ioCount[13]                        ; controller:inst2|ioCount[13]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.513      ;
; 0.361 ; controller:inst2|ioCount[14]                        ; controller:inst2|ioCount[14]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.513      ;
; 0.361 ; controller:inst2|ioCount[15]                        ; controller:inst2|ioCount[15]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.513      ;
; 0.361 ; controller:inst2|ioCount[20]                        ; controller:inst2|ioCount[20]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.513      ;
; 0.361 ; controller:inst2|ioCount[23]                        ; controller:inst2|ioCount[23]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.513      ;
; 0.361 ; controller:inst2|ioCount[29]                        ; controller:inst2|ioCount[29]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.513      ;
; 0.361 ; controller:inst2|ioCount[30]                        ; controller:inst2|ioCount[30]                        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.513      ;
; 0.361 ; async_transmitter:inst1|TxD_shift[3]                ; async_transmitter:inst1|TxD_shift[2]                ; clk          ; clk         ; 0.000        ; 0.000      ; 0.513      ;
; 0.361 ; async_receiver:inst|RxD_sync[1]                     ; async_receiver:inst|Filter_cnt[1]                   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.513      ;
; 0.361 ; async_receiver:inst|RxD_sync[1]                     ; async_receiver:inst|Filter_cnt[0]                   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.513      ;
; 0.362 ; controller:inst2|ioCount[1]                         ; controller:inst2|ioCount[1]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.514      ;
; 0.363 ; controller:inst2|ioCount[2]                         ; controller:inst2|ioCount[2]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.515      ;
; 0.363 ; async_receiver:inst|OversamplingCnt[1]              ; async_receiver:inst|OversamplingCnt[2]              ; clk          ; clk         ; 0.000        ; 0.000      ; 0.515      ;
; 0.364 ; async_receiver:inst|BaudTickGen:tickgen|Acc[20]     ; async_receiver:inst|BaudTickGen:tickgen|Acc[20]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.516      ;
; 0.364 ; controller:inst2|ioCount[4]                         ; controller:inst2|ioCount[4]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.516      ;
; 0.364 ; controller:inst2|ioCount[7]                         ; controller:inst2|ioCount[7]                         ; clk          ; clk         ; 0.000        ; 0.000      ; 0.516      ;
; 0.364 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[19] ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[19] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.516      ;
; 0.365 ; async_receiver:inst|BaudTickGen:tickgen|Acc[2]      ; async_receiver:inst|BaudTickGen:tickgen|Acc[2]      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.517      ;
; 0.367 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[0]  ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[0]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.519      ;
; 0.367 ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[1]  ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[1]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.519      ;
; 0.369 ; async_receiver:inst|BaudTickGen:tickgen|Acc[4]      ; async_receiver:inst|BaudTickGen:tickgen|Acc[4]      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.521      ;
; 0.369 ; async_receiver:inst|BaudTickGen:tickgen|Acc[6]      ; async_receiver:inst|BaudTickGen:tickgen|Acc[6]      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.521      ;
; 0.369 ; async_receiver:inst|BaudTickGen:tickgen|Acc[15]     ; async_receiver:inst|BaudTickGen:tickgen|Acc[15]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.521      ;
+-------+-----------------------------------------------------+-----------------------------------------------------+--------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk'                                                                                                ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                                              ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clk   ; Rise       ; clk                                                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[10]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[10]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[11]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[11]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[12]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[12]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[13]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[13]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[14]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[14]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[15]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[15]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[16]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[16]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[17]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[17]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[18]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[18]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[19]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[19]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[1]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[1]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[20]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[20]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[21]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[21]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[2]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[2]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[3]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[3]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[4]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[4]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[5]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[5]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[6]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[6]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[7]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[7]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[8]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[8]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[9]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|BaudTickGen:tickgen|Acc[9]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|Filter_cnt[0]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|Filter_cnt[0]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|Filter_cnt[1]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|Filter_cnt[1]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|OversamplingCnt[0]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|OversamplingCnt[0]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|OversamplingCnt[1]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|OversamplingCnt[1]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|OversamplingCnt[2]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|OversamplingCnt[2]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|OversamplingCnt[3]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|OversamplingCnt[3]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_bit                         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_bit                         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_data[0]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_data[0]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_data[1]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_data[1]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_data[2]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_data[2]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_data[3]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_data[3]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_data[4]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_data[4]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_data[5]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_data[5]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_data[6]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_data[6]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_data[7]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_data[7]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_data_ready                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_data_ready                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_state[0]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_state[0]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_state[1]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_state[1]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_state[2]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_state[2]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_state[3]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_state[3]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_sync[0]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_sync[0]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_receiver:inst|RxD_sync[1]                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_receiver:inst|RxD_sync[1]                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[10] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[10] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[11] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[11] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[12] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[12] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[13] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[13] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[14] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[14] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; async_transmitter:inst1|BaudTickGen:tickgen|Acc[15] ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; 232_in    ; clk        ; 2.494 ; 2.494 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; 232_in    ; clk        ; -2.374 ; -2.374 ; Rise       ; clk             ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------+
; Clock to Output Times                                                 ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; 232_out   ; clk        ; 4.832 ; 4.832 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-----------------------------------------------------------------------+
; Minimum Clock to Output Times                                         ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; 232_out   ; clk        ; 4.697 ; 4.697 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+--------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                            ;
+------------------+----------+-------+----------+---------+---------------------+
; Clock            ; Setup    ; Hold  ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------+----------+-------+----------+---------+---------------------+
; Worst-case Slack ; -4.769   ; 0.215 ; N/A      ; N/A     ; -1.380              ;
;  clk             ; -4.769   ; 0.215 ; N/A      ; N/A     ; -1.380              ;
; Design-wide TNS  ; -277.15  ; 0.0   ; 0.0      ; 0.0     ; -134.38             ;
;  clk             ; -277.150 ; 0.000 ; N/A      ; N/A     ; -134.380            ;
+------------------+----------+-------+----------+---------+---------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; 232_in    ; clk        ; 4.485 ; 4.485 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; 232_in    ; clk        ; -2.374 ; -2.374 ; Rise       ; clk             ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------+
; Clock to Output Times                                                 ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; 232_out   ; clk        ; 9.097 ; 9.097 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-----------------------------------------------------------------------+
; Minimum Clock to Output Times                                         ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; 232_out   ; clk        ; 4.697 ; 4.697 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------+
; Setup Transfers                                                   ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clk        ; clk      ; 4093     ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------+
; Hold Transfers                                                    ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clk        ; clk      ; 4093     ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 1     ; 1    ;
; Unconstrained Input Port Paths  ; 1     ; 1    ;
; Unconstrained Output Ports      ; 1     ; 1    ;
; Unconstrained Output Port Paths ; 3     ; 3    ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Tue Dec  9 17:19:28 2014
Info: Command: quartus_sta NeuralNet -c processor
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Critical Warning (332012): Synopsys Design Constraints File file not found: 'processor.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name clk clk
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -4.769
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -4.769      -277.150 clk 
Info (332146): Worst-case hold slack is 0.391
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.391         0.000 clk 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380      -134.380 clk 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -1.494
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.494       -64.443 clk 
Info (332146): Worst-case hold slack is 0.215
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.215         0.000 clk 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380      -134.380 clk 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 4 warnings
    Info: Peak virtual memory: 506 megabytes
    Info: Processing ended: Tue Dec  9 17:19:29 2014
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:01


